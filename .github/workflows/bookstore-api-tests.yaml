name: Bookstore API Tests

on:
  # Run workflow on every push/merge to main
  push:
    branches: [ main ]   

  # Run workflow on PR creation/updates targeting main
  pull_request:
    branches: [ main ]  

  # Allow manual trigger from GitHub Actions UI 
  workflow_dispatch:      
    inputs:
      tags:
        description: 'Test tags to run (e.g. positive, negative, edge)'
        required: false
        default: ''
      baseUrl:
        description: 'Base URL for API'
        required: false
        default: 'https://fakerestapi.azurewebsites.net'

  # Nightly job: Run all tests at 2 AM UTC every day
  schedule:
    - cron: '0 2 * * *'


jobs:
  # ===================================================
  # JOB 1 - Run full test suite on push to main
  # ===================================================
  run-all-tests:
    name: Run All Tests - Push/PR
    runs-on: ubuntu-latest
    

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Build Docker image
      - name: Build Docker image
        run: docker build -t bookstore-api-tests .

      # 4. Clean previous results
      - name: Clean previous Allure outputs
        if: always()
        run: rm -rf ./allure-results ./allure-report || true

      # 5. Run all tests
      - name: Run all tests
        run: |
          echo "Running full test suite"
          docker run --name bookstore-tests \
            -e BASE_URL=https://fakerestapi.azurewebsites.net \
            bookstore-api-tests

      # 6. Copy results from container
      - name: Copy Allure results
        if: always()
        run: docker cp bookstore-tests:/app/target/allure-results ./allure-results

      # 7. Clean container
      - name: Cleanup container
        if: always()
        run: docker rm -f bookstore-tests || true

      # 8. Generate Allure report
      - name: Generate Allure HTML report
        if: always()
        run: |
          npm install -g allure-commandline --save-dev
          allure generate ./allure-results --clean -o ./allure-report

      # 9. Deploy report
      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          force_orphan: true
          keep_files: false

      # 10. Print Allure report link
      - name: Show Allure Report Link
        if: always()
        run: |
          echo "Here is your report: https://MajaTrajkovska.github.io/bookstore-api-tests/"
          echo "Here is your report: https://MajaTrajkovska.github.io/bookstore-api-tests/" >> $GITHUB_STEP_SUMMARY

  # -----------------------------------------
  # JOB 2: Manual run with tags (workflow_dispatch)
  # -----------------------------------------
  run-tagged-tests:
    name: Run Tagged Tests - Manual Dispatch
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'workflow_dispatch' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t bookstore-api-tests .

      - name: Clean previous Allure outputs
        run: |
          rm -rf ./allure-results || true
          rm -rf ./allure-report || true

      - name: Run tagged tests
        run: |
          echo "Running tests with tags: ${{ github.event.inputs.tags }}"
          docker run --name bookstore-tests \
            -e TAGS=${{ github.event.inputs.tags }} \
            -e BASE_URL=${{ github.event.inputs.baseUrl }} \
            bookstore-api-tests

      - name: Copy Allure results
        if: always()
        run: docker cp bookstore-tests:/app/target/allure-results ./allure-results

      - name: Cleanup container
        if: always()
        run: docker rm -f bookstore-tests || true

      - name: Generate Allure HTML report
        if: always()
        run: |
          npm install -g allure-commandline --save-dev
          allure generate ./allure-results --clean -o ./allure-report

      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          force_orphan: true
          keep_files: false

      - name: Show Allure Report Link
        if: always()
        run: |
          echo "Here is your report: https://MajaTrajkovska.github.io/bookstore-api-tests/"
          echo "Here is your report: https://MajaTrajkovska.github.io/bookstore-api-tests/" >> $GITHUB_STEP_SUMMARY

  # -----------------------------------------
  # JOB 3: Nightly job (2 AM UTC full tests)
  # -----------------------------------------
  nightly-run:
    name: Nightly Run - All Tests
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'schedule' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t bookstore-api-tests .

      - name: Clean previous Allure outputs
        run: |
          rm -rf ./allure-results || true
          rm -rf ./allure-report || true

      - name: Run nightly full test suite
        run: |
          echo "Running nightly full test suite"
          docker run --name bookstore-tests \
            -e BASE_URL=https://fakerestapi.azurewebsites.net \
            bookstore-api-tests

      - name: Copy Allure results
        if: always()
        run: docker cp bookstore-tests:/app/target/allure-results ./allure-results

      - name: Cleanup container
        if: always()
        run: docker rm -f bookstore-tests || true

      - name: Generate Allure HTML report
        if: always()
        run: |
          npm install -g allure-commandline --save-dev
          allure generate ./allure-results --clean -o ./allure-report

      - name: Deploy Allure report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          force_orphan: true
          keep_files: false

      - name: Show Allure Report Link
        if: always()
        run: |
          echo "Here is your report: https://MajaTrajkovska.github.io/bookstore-api-tests/"
          echo "Here is your report: https://MajaTrajkovska.github.io/bookstore-api-tests/" >> $GITHUB_STEP_SUMMARY