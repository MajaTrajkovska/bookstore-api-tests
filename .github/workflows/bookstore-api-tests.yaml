name: Bookstore API Tests

on:
  # Trigger when pushing or merging into main branch → run full suite
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]

  # Manual trigger → allows specifying tags and baseUrl
  workflow_dispatch:
    inputs:
      tags:
        description: 'Test tags to run (e.g., positive, negative, edge)'
        required: false
        default: ''
      baseUrl:
        description: 'Base URL for API'
        required: false
        default: 'https://fakerestapi.azurewebsites.net'

  # Scheduled nightly run at 2 AM UTC → run full suite
  schedule:
    - cron: '0 2 * * *'

jobs:
  test:
    name: Build and Run API Tests
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up Docker Buildx (required for building images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Build Docker image for the automation framework
      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          tags: bookstore-api-tests:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 4. Run tests inside the Docker container
      - name: Run tests
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.tags }}" ]; then
            echo "Running tests with tags: ${{ github.event.inputs.tags }}"
            docker run --name bookstore-tests \
              -e TAGS=${{ github.event.inputs.tags }} \
              -e BASE_URL=${{ github.event.inputs.baseUrl }} \
              -v ${{ github.workspace }}/target/allure-results:/app/target/allure-results \
              bookstore-api-tests
          else
            echo "Running full test suite"
            docker run --name bookstore-tests \
              -e BASE_URL=https://fakerestapi.azurewebsites.net \
              -v ${{ github.workspace }}/target/allure-results:/app/target/allure-results \
              bookstore-api-tests
          fi

      # 5. Save container logs (useful for debugging)
      - name: Save container logs
        if: always()
        run: |
          mkdir -p logs
          docker logs bookstore-tests > logs/test-execution.log
        continue-on-error: true

      # 6. Clean up Docker container after tests
      - name: Clean up container
        if: always()
        run: docker rm -f bookstore-tests || true
        continue-on-error: true

      # 7. Upload execution logs as artifact
      - name: Upload execution logs as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-logs
          path: logs/
          retention-days: 7

      # 8. Download Allure history from previous runs (needed for trends)
      - name: Get Allure history
        uses: actions/download-artifact@v4
        if: always()
        continue-on-error: true
        with:
          name: allure-history
          path: allure-history

      # 9. Generate new Allure report
      - name: Generate Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          allure_results: target/allure-results
          allure_history: allure-history
          keep_reports: 20

      # 10. Upload Allure report as artifact
      - name: Upload Allure Report as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report
          retention-days: 30

      # 11. Upload updated Allure history for next run
      - name: Upload Allure history for next run
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-history
          path: allure-history
          retention-days: 30

      # 12. Deploy report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: ./allure-history
          # Use subfolder based on run type: tag or full
          destination_dir: ${{ github.event.inputs.tags || 'full' }}
          keep_files: true
          force_orphan: false

      # 13. Print direct link to GitHub Pages report
      - name: Show Allure Report Link
        if: always()
        run: |
          if [ -n "${{ github.event.inputs.tags }}" ]; then
            echo "Allure Report: https://MajaTrajkovska.github.io/bookstore-api-tests>/${{ github.event.inputs.tags }}/" >> $GITHUB_STEP_SUMMARY
          else
            echo "Allure Report: https://MajaTrajkovska.github.io/bookstore-api-tests>/full/" >> $GITHUB_STEP_SUMMARY
          fi
